%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.1.0.604 (R2013a). Operating System: Linux 3.2.0-23-generic #36-Ubuntu SMP Tue Apr 10 20:39:51 UTC 2012 x86_64.
%%Title: /media/Data/Dropbox/PhD/iccv2013/20130412-4_iccv2013/images/BoxWhiskerVideoAccuracy_new.eps
%%CreationDate: 04/12/2013  18:48:19
%%DocumentNeededFonts: Times-Roman
%%+ Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:   -43   161   639   679
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:   -43   161   639   679
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode -0516 8148 csm

    0     0  8190  6216 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 8191 6217 rf
6 w
0 4926 6347 0 0 -4926 1065 5392 4 MP
PP
-6347 0 0 4926 6347 0 0 -4926 1065 5392 5 MP stroke
4 w
DO
SO
6 w
0 sg
1065 5392 mt 7412 5392 L
1065  466 mt 7412  466 L
1065 5392 mt 1065  466 L
7412 5392 mt 7412  466 L
1065 5392 mt 7412 5392 L
1065 5392 mt 1065  466 L
1858 5392 mt 1858 5328 L
1858  466 mt 1858  529 L
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 216 FMSR

1060 5619 mt 
(CB = 4000, Dense) s
3445 5392 mt 3445 5328 L
3445  466 mt 3445  529 L
2701 5619 mt 
(CB = 500, Dense) s
5031 5392 mt 5031 5328 L
5031  466 mt 5031  529 L
4215 5619 mt 
(CB = 4000, Sparse) s
6618 5392 mt 6618 5328 L
6618  466 mt 6618  529 L
5856 5619 mt 
(CB = 500, Sparse) s
1065 4982 mt 1128 4982 L
7412 4982 mt 7348 4982 L
 814 5059 mt 
(50) s
1065 4470 mt 1128 4470 L
7412 4470 mt 7348 4470 L
 814 4547 mt 
(55) s
1065 3957 mt 1128 3957 L
7412 3957 mt 7348 3957 L
 814 4034 mt 
(60) s
1065 3445 mt 1128 3445 L
7412 3445 mt 7348 3445 L
 814 3522 mt 
(65) s
1065 2932 mt 1128 2932 L
7412 2932 mt 7348 2932 L
 814 3009 mt 
(70) s
1065 2420 mt 1128 2420 L
7412 2420 mt 7348 2420 L
 814 2497 mt 
(75) s
1065 1907 mt 1128 1907 L
7412 1907 mt 7348 1907 L
 814 1984 mt 
(80) s
1065 1395 mt 1128 1395 L
7412 1395 mt 7348 1395 L
 814 1472 mt 
(85) s
1065  882 mt 1128  882 L
7412  882 mt 7348  882 L
 814  959 mt 
(90) s
1065 5392 mt 7412 5392 L
1065  466 mt 7412  466 L
1065 5392 mt 1065  466 L
7412 5392 mt 7412  466 L
gs 1065 466 6348 4927 rc
DA
0 -1104 1858 2178 2 MP stroke
0 -1460 3445 2555 2 MP stroke
0 -1019 5031 2605 2 MP stroke
0 -989 6618 2640 2 MP stroke
0 -1451 1858 5081 2 MP stroke
0 -1245 3445 4832 2 MP stroke
0 -1004 5031 5096 2 MP stroke
0 -1124 6618 4733 2 MP stroke
SO
396 0 1660 1074 2 MP stroke
397 0 3246 1095 2 MP stroke
397 0 4833 1586 2 MP stroke
396 0 6420 1651 2 MP stroke
396 0 1660 5081 2 MP stroke
397 0 3246 4832 2 MP stroke
397 0 4833 5096 2 MP stroke
396 0 6420 4733 2 MP stroke
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
-794 0 0 1452 794 0 0 -1452 1461 3630 5 MP stroke
-793 0 0 1032 793 0 0 -1032 3048 3587 5 MP stroke
-793 0 0 1487 793 0 0 -1487 4635 4092 5 MP stroke
-794 0 0 969 794 0 0 -969 6221 3609 5 MP stroke
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
794 0 1461 3131 2 MP stroke
793 0 3048 3103 2 MP stroke
793 0 4635 3092 2 MP stroke
794 0 6221 3128 2 MP stroke
gs 3372 616 147 147 rc
3409  689 mt 3481  689 L
3445  653 mt 3445  725 L
gr

gs 6545 5059 147 183 rc
6582 5168 mt 6654 5168 L
6618 5132 mt 6618 5204 L
6582 5132 mt 6654 5132 L
6618 5096 mt 6618 5168 L
gr

gr

c9
0 sg
 712 3719 mt  -90 rotate
(Average Accuracy) s
90 rotate

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
